/*	【方法】：在java中重复使用代码，提高代码的复用性
	这个【方法】，我们称之为“调用”--		/invoke
*/
	//【方法】，定义在类体中，没有顺序，可定义多个方法
	/*
	1.方法怎么定义，语句结构
	//方法名可以自己命名
		遵循驼峰命名法
	修饰符列表 返回值类型 方法名(形式参数列表){
	方法体
	return  //当返回值类型不为void时，必须写
	}
	2.解释语句结构
		2.1关于修饰符列表
			*可选项，不是必须的
			*暂时统一写成public static【以后讲】
			*方法修饰符中有static怎么调用？
				-类名.方法名(实际参数列表);
		2.2返回值类型
			2.2.1什么是返回值
				*方法在完成自己的功能后，返回的数据
			2.2.2返回值类型？
				*是数据，就会有类型，我们需指定他的类型
			2.2.3有什么类型？
				*java中的任何类型
			2.2.4如果不需要返回值？
				*不是所有的功能完成后都会有一个值，
				*所以如果不需要该方法进行值的返回时
				*使用void
			2.2.5怎么写返回值？
			*return 数值
			*注意类型要与方法的类型一致
				-关于return
				return与break相似，使用时，结束方法
		2.3形式参数列表，简称形参
			*形参是局部变量 int a;double b;float c;string s;....
			*形参个数不限
			*形参之间用逗号隔开
			*形参中，数据类型起决定性作用，名字无所谓
			*方法在调用时传递的真实数据为真实参数--实参
			*实参与形参必须：
				-数量相同
				-类型相同
	3.关于方法调用
		方法修饰列表中有static时，不调用是不会执行的
		调用方法
			类名.方法名(实参列表);
	*/

public class Way{
	public static void main(String[] args) {
		Way.sumInt(10,20);
		Way.sumInt(111,222);
		Way.sumInt(666,888);
		Way.sumInt(12345,54321);
		Way.sumInt(20821,20320);
		//此处定义一个变量，只要与方法变量类型相同就可使用
		int a = 156;
		Way.sumInt(a,123);
		//可多次调用
		//注意：若调用的方法不执行完，main方法会一直暂停，直至被调用的方法执行完毕
		int b = 789;
		Way.sumInt(b,a);
		Way.sumInt(456,b);
	}
	public static void sumInt(int a,int b){
		int c = a + b;
		System.out.println(a + "+" + b + "=" + c);
	}
}